import Head from 'next/head';
import styles from '@/styles/Home.module.css';
import React, { useState } from 'react';
import NationalityDropdown from '../pages/nationalityDropdown';
import AirportDropdown from '../pages/airportDropdown';
import { useWeb3 } from '@3rdweb/hooks';


function FlightForm(){

  const {address, chainId, connectWallet} = useWeb3();

  const [origin, setOrigin] = useState('');
  const [destination, setDestination] = useState('');
  const [departureDate, setDepartureDate] = useState('');
  const [returnDate, setReturnDate] = useState('');
  const [passengerCount, setPassengerCount] = useState('');
        
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');
  const [date, setDate] = useState('');
  const [nationality, setNationality] = useState('');
  const [passportNumber, setPassportNumber] = useState('');
  const [expiryDate, setExpiryDate] = useState('');
  const [gender, setGender] = useState('');
  const [formData, setFormData] = useState([]);

  const [flightsOpen, setFlightsOpen] = useState(false);
  const [adultOpen, setAdultOpen] = useState(false);


  function toggleFlights() {
    setFlightsOpen(!flightsOpen);
  }
  
  function toggleAdult() {
    setAdultOpen(!adultOpen);
  }

  
  async function handleSubmit(e) {
    e.preventDefault();
      setFormData([...formData, { 
      origin, 
      destination, 
      departureDate,
      returnDate, 
      passengerCount, 
      firstName, 
      lastName, 
      date, 
      nationality, 
      passportNumber, 
      expiryDate, 
      gender,
    }]);

    console.log(`
    origin: ${origin}, 
    destination: ${destination},
    departureDate: ${departureDate},
    returnDate: ${returnDate},
    passengerCount: ${passengerCount},
    firstName: ${firstName},
    lastName: ${lastName},
    date: ${date},
    nationality: ${nationality},
    passportNumber: ${passportNumber},
    expiryDate: ${expiryDate},
    gender: ${gender},
    `);

    if(address){
      console.log('address: ', address);
      console.log('chainIds: ', chainId);
    }else{
      // Perform a fake transaction
      const fakeTransaction = {
        from: 0x76F34626b9d5FAD4955BdA00a7D60226852594AE,
        to: "0x0000000000000000000000000000000000000000",
        value: "1000000000000000000", // 1 ETH
        gas: 21000,
      };
      console.log('fakeTransaction: ', fakeTransaction);
      console.log('address: ', address);
      console.log('chainIds: ', chainId);

      connectWallet('injected');
    }

  }
  
  return(
      <>
      <Head>
        <title>Flight Reservation</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
          <div className={styles.description}>

            <form onSubmit={handleSubmit}>
              <div className="mb-6">
                <h1 
                  onClick={toggleFlights}
                  className={styles.accordionButton}
                >Flights Info</h1>
                {flightsOpen && (
                  <div>
                    <AirportDropdown value={origin} onChange={(e) => setOrigin(e.target.value)} name='From'/>
                    <AirportDropdown value={destination} onChange={(e) => setDestination(e.target.value)} name='To'/>
                    <label
                    htmlFor="large-input" 
                    className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                    >Departure</label>
                    <input
                    className="mb-6 bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500" 
                    type="date" 
                    value={departureDate} 
                    onChange={(e) => setDepartureDate(e.target.value)}
                    />
                    <label
                    htmlFor="large-input" 
                    className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                    >Return</label>
                    <input 
                    type="date"
                    className="mb-6 bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500" 
                    value={returnDate} 
                    onChange={(e) => setReturnDate(e.target.value)}
                    />
                    <label
                    htmlFor="large-input" 
                    className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                    >Passenger Count</label>
                    <input 
                    type="number"
                    className="mb-6 bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500" 
                    value={passengerCount} 
                    onChange={(e) => setPassengerCount(e.target.value)}
                    />
                  </div>
                )}
                
              </div>
              <div className="mb-6">
                <h1 
                  onClick={toggleAdult}
                  className={styles.accordionButton}
                >Adult Info</h1>
                {adultOpen && (
                  <div>
                    <label 
                    htmlFor="large-input" 
                    className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                    >
                      First Name
                    </label>
                    <input 
                      type="text" 
                      className="mb-6 bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                      name="firstName" 
                      placeholder="Enter First Name" 
                      value={firstName}
                      onChange={(e) => setFirstName(e.target.value)}
                    />

                    <label
                    htmlFor="large-input" 
                    className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                    >Last Name</label>
                    <input 
                      type="text" 
                      name="lastName" 
                      className="mb-6 bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                      placeholder="Enter Last Name" 
                      value={lastName}
                      onChange={(e) => setLastName(e.target.value)}
                    />

                    <label
                    htmlFor="large-input" 
                    className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                    >Date of Birth</label>
                    <input 
                      type="date" 
                      name="date"
                      className="mb-6 bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                      value={date}
                      onChange={(e) => setDate(e.target.value)}
                    />

                    <NationalityDropdown value={nationality} onChange={(e) => setNationality(e.target.value)} name='Nationality'/>

                    <br></br>
                    <h3>Passport Details</h3>
                    <br></br>

                    <label
                    htmlFor="large-input" 
                    className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                    >Passport No</label>
                    <input 
                      type="text" 
                      name="passportNumber"
                      className="mb-6 bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                      placeholder="Enter Passport Number" 
                      value={passportNumber}
                      onChange={(e) => setPassportNumber(e.target.value)}
                    />

                    <label
                    htmlFor="large-input" 
                    className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                    >Passport Expiry Date</label>
                    <input 
                      type="date" 
                      name="date"
                      className="mb-6 bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500"
                      value={expiryDate}
                      onChange={(e) => setExpiryDate(e.target.value)}
                    />

                    <label
                    htmlFor="large-input" 
                    className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                    >Gender Specified on your travel document</label>
                    <select 
                    name="gender"
                    className="mb-6 bg-gray-100 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500" 
                    value={gender} onChange={(e) => 
                    setGender(e.target.value)}
                    >
                    <option value="">select Gender</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                    <option value="Other">Other</option>
                    </select>
                  </div>
                )}
              </div>
              <button 
                type="submit" 
                className="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                >
                Pay
              </button>
            </form>
          </div>
      </main>
    </>
  )
}

export default FlightForm